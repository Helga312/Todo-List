{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","setInputText","inputText","todos","setTodos","setStatus","className","value","onChange","e","target","type","placeholder","onClick","preventDefault","text","completed","id","nextId","name","Todo","todo","map","item","filter","el","TodoList","filteredTodos","App","useState","status","setFilteredTodos","useEffect","getLocalTodos","filterHandler","saveLocalTodos","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.22c9d48d.chunk.js","sourcesContent":["import React from 'react';\r\nimport nextId from 'react-id-generator';\r\n\r\nconst Form = ({ setInputText, inputText, todos, setTodos, setStatus }) => {\r\n\r\n    const inputTextHandler = (e) => {\r\n        setInputText(e.target.value);\r\n    }\r\n\r\n    const submitTodoHandler = (e) => {\r\n        e.preventDefault(); // prevents refreshing of the page\r\n        setTodos([\r\n            ...todos, { text: inputText, completed: false, id: nextId() }\r\n        ]);\r\n        setInputText(\"\");\r\n    }\r\n\r\n    const statusHandler = (e) => {\r\n        setStatus(e.target.value);\r\n    }\r\n\r\n    return (\r\n        <form>\r\n            <div className=\"input-form\">\r\n                <input value={inputText} onChange={inputTextHandler} type=\"text\" className=\"todo-input\" placeholder=\"add your todo\" />\r\n                <button onClick={submitTodoHandler} className=\"todo-button\" type=\"submit\">\r\n                    <i className=\"fas fa-plus-square\"></i>\r\n                </button>\r\n            </div>\r\n\r\n            <div className=\"select\">\r\n                <p className=\"select_title\">Filter your todos:</p>\r\n                <select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\r\n                    <option value=\"all\">All</option>\r\n                    <option value=\"completed\">Completed</option>\r\n                    <option value=\"uncompleted\">Uncompleted</option>\r\n                </select>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\n\r\nconst Todo = ({ text, todo, todos, setTodos }) => {\r\n    //Events\r\n    const deleteHandler = () => {\r\n        setTodos(todos.filter(el => el.id !== todo.id));\r\n    };\r\n    const completeHandler = () => {\r\n        setTodos(todos.map((item) => {\r\n            if (item.id === todo.id) {\r\n                return {\r\n                    ...item, completed: !item.completed\r\n                }\r\n            };\r\n            return item;\r\n        }))\r\n    };\r\n    return (\r\n        <div className=\"todo\">\r\n            <li className={`todo-item ${todo.completed ? \"completed\" : \"\"}`}>\r\n                {text}\r\n            </li>\r\n            <button onClick={completeHandler} className=\"complete-btn\"><i className=\"fas fa-check\"></i></button>\r\n            <button onClick={deleteHandler} className=\"trash-btn\"><i className=\"fas fa-trash\"></i></button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Todo;","import React from 'react';\r\n//Import Components\r\nimport Todo from \"./Todo\";\r\n\r\nconst TodoList = ({ todos, setTodos, filteredTodos }) => {\r\n\r\n  return (\r\n    <div className=\"todo-container\">\r\n      <ul className=\"todo-list\">\r\n        {filteredTodos.map(todo => (\r\n          <Todo text={todo.text} key={todo.id} todo={todo} todos={todos} setTodos={setTodos} />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoList;","import React, { useState, useEffect } from 'react';\nimport './App.css';\n// Importing Components\nimport Form from './components/Form';\nimport TodoList from './components/TodoList';\n\nfunction App() {\n  //States\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState(\"all\");\n  const [filteredTodos, setFilteredTodos] = useState([]);\n\n  //Run once when the app starts, fetching todos from the local storage\n  useEffect(() => {\n    getLocalTodos();\n  }, []);\n\n  //Use Effect\n  useEffect(() => {\n    filterHandler();\n    saveLocalTodos();\n  }, [todos, status]);\n\n  //Functions\n  const filterHandler = () => {\n    switch (status) {\n      case \"completed\":\n        setFilteredTodos(todos.filter(todo => todo.completed === true));\n        break;\n      case \"uncompleted\":\n        setFilteredTodos(todos.filter(todo => todo.completed === false));\n        break;\n      default:\n        setFilteredTodos(todos);\n        break;\n    }\n  }\n  //Save to Local Storage\n  const saveLocalTodos = () => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos))\n  };\n  const getLocalTodos = () => {\n    if (localStorage.getItem('todos') === null) {\n      localStorage.setItem('todos', JSON.stringify([]));\n    } else {\n      let todoLocal = JSON.parse(localStorage.getItem(\"todos\"));\n      setTodos(todoLocal);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Your Todo List</h1>\n      </header>\n      <Form todos={todos} setTodos={setTodos} inputText={inputText} setInputText={setInputText} setStatus={setStatus} />\n      <TodoList todos={todos} setTodos={setTodos} filteredTodos={filteredTodos} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}